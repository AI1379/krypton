#include "GMPWrapper.hpp"
#include "RSA.hpp"
#include <gtest/gtest.h>

using namespace Krypton;

TEST(RSATest, RSAKeyTest1)
{
    BigInt n = "00CB3B7EF3D466335AC0ACF54688A174AEE27869101C006EC8779E30BB0B243C4425900EFA34F7A913D1B63FD9E2030EB9D7FAF48E20F65681B039AC58EE5A72B397729FCCDEF9D5B05FAD19673E158E6819D4B21CD04205DBFDB15ED0ACEAE6728BC93475190E81FABCEAD4B10E0EA4FF96BA47C17AD14ACDAAFD7056F166C67D"_bix;
    BigInt e = 65537;
    auto d = "00CA5BA049DA7834B42D5B4A1204237752572F7BB54D9C64B278E06B37229DDEE01FE2B3F7105C74DEC61648B78322763C37C0AA57069D217F9A5FA2AB1E11B3583682878E202E794CB3A961D429019C620C5CE29763C385B344786A4D38CFCCA1C578B860675D464D17200C68F701D342E2FFE1F0B427C53BBF22E3A9524EBBC5"_bix;
    auto p = "00EB732AF2F7FFC4810EEFD8A6B5C83233FA7A6F7B73F642328D4AC3D5F1FF9CEFFEB7E0738005E4F9D739671180C9C0B36C159FD31CEF10C4DC24C9CA2A507DA7"_bix;
    auto q = "00DCF8781DD4CD84CE0D03D4BB6BDB5DB017AEE89740D8B8EBDC232E32B03A880CA086316F86F517E97185C62BBBB91793BDF29385608BACA416EC21221F0BC73B"_bix;
    auto dp = "00E28EE16706881037F77D87457369FE14D212FA2F1AB87D9E5322FC2A6440886CCEF7747CEF55BCAD441232413F61E3914291D446BA72B7FA15B33890D602B9C5"_bix;
    auto dq = "24B1B228AA04F2EFD0A3793922610C3EC8C007E9CE1FEF1D63B207E2ECF6DB4ED57D534A44EC006B88A9814E13DF59B5F40E0B4753CFFDFC45BE32865B0776AF"_bix;
    auto qinv = "00AE0AC3D5FB9C0A6BC1E6E791B5AE39FB23591E859922C0718BD0439987DD5678C3F3850824DE56442FB58A3832B77B4196D9643CB0386AB8AF13FFEFC99DD931"_bix;
    Detail::RSAImpl rsactx;
    rsactx.setPrivateKey(p, q, dp, dq, qinv);
    rsactx.generatePublicKey();
    auto kp = rsactx.getKeyPair();
    ASSERT_EQ(kp.n, n);
    ASSERT_EQ(kp.e, e);
    ASSERT_EQ(kp.d, d);
    ASSERT_EQ(kp.dp, dp);
    ASSERT_EQ(kp.dq, dq);
    ASSERT_EQ(kp.qinv, qinv);
}